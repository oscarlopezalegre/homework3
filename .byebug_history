continue
@editing_event.errors.full_messages
@editing_event.valid?
continue
@editing_event.valid?
continue
@editing_event.errors.full_messages
@editing_event.valid?
continue
e.ends_at >= Time.new.inspect
e.ends_at>=Time.new.inspect
e.ends_at
e=last
last
Time.new.inspect
continue
@editing_event.save
@editing_event
next
@editing_event.valid?
next
@editing_event.valid?
next
continue
 @editing_event = Event.find(params[:id])
next
@editing_event
next
@editing_event
next
continue
next
@editing_event.valid?
@editing_event.isvalid?
@editing_event.errors
@editing_event.errors.full_messages
next
continue
@editing_event
next
continue
next
continue
@editing_event.errors.full_messages
@editing_event.errors
@editing_event
next
continue
@editing_event.errors.full_messages
@editing_event.errors
next
continue
next
@editing_event.valid?
continue
next
@editing_event.valid?
@editing_event.valid
@editing_event.is_valid
next
continue
@editing_event.errors.full_messages
@editing_event.valid?
next
continue
next
event_params
continue
@editing_event.save
next
event_params
continue
next
event_params
continue
event = Event.new(event_params)
event_params
continue
next
event_params
continue
event_params
continue
event.save
event = Event.new(name:"myevent", :venue => venue_in)
myevent.save
event = Event.new(name:"myevent", :venue => venue_in)
venue_in
venue_in.save
venue_in
venue_in = Venue.new(:name => "oscar", :region => Region.find(1))
venue_in = Venue.new(:name => "oscar", :region => Venue.find(1))
venue_in
venue_in.save!
venue_in.save
venue_in = Venue.new(:name => "oscar", :region => Venue.find(1))
venue_in = Venue.new(:name => "oscar", :region => 1)
v = Venue.new(:name => "oscar", :region => 1)
@editing_event.save
@editing_event
editing_event
next
continue
@editing_event
editing_event
continue
@editing_event
continue
next
event_params
params
continue
quit
next
continue
end
next
continue
next
continue
@event_types
continue
quit
@event_types
